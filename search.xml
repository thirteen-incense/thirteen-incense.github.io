<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Become The Ultimate Phychic</title>
    <url>/2020/10/18/Become-The-Ultimate-Phychic/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Description:<br>Let’s play Psychic<br>A box contains green, red, and blue balls. The total number of balls is given by n (0 &lt; n &lt; 50).</p>
<p>Each ball has a mass that depends on the ball color. Green balls weigh 5kg, red balls weigh 4kg, and blue balls weigh 3kg.</p>
<p>Given the total number of balls in the box, n, and a total mass, m, your task is to craft a program that will determine the quantities of each colored ball. Return a list of these quantities as the answer.</p>
<p>Don’t forget that some combinations of n and m may have more than one possibility!</p>
<p>Examples<br>Python</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Guess_it(<span class="number">3</span>, <span class="number">12</span>)</span><br><span class="line">[[<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>], [<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>]]</span><br></pre></td></tr></table></figure>
<p>Elixir</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">iex(<span class="number">1</span>)&gt; GuessIt.guess(<span class="number">3</span>, <span class="number">12</span>)</span><br><span class="line">[&#123;0,<span class="number">3,0</span>&#125;, &#123;<span class="number">1,1</span>,<span class="number">1</span>&#125;]</span><br></pre></td></tr></table></figure>
<p>Note: Order of the returned elements is unimportant in the Elixir version.</p>
<p>Assumptions<br>1.You can assume that all inputs are of the correct type<br>2.You can assume that the range of n will be [1, 50]<br>3.Each element of the returned list should return the quantities in the order of g, r, b.</p>
<p>Elixir</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">GuessIt</span></span> <span class="keyword">do</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">guess</span></span>(n, m) <span class="keyword">do</span></span><br><span class="line">	list(n)</span><br><span class="line">	|&gt; Enum.filter(<span class="keyword">fn</span> &#123;g,r,b&#125; -&gt; g*<span class="number">5</span>+r*<span class="number">4</span>+b*<span class="number">3</span> == m <span class="keyword">end</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">list</span></span>(n), <span class="symbol">do:</span> list(n, 0, 0, n)</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">list</span></span>(n, n, _, _), <span class="symbol">do:</span> [&#123;n, 0, 0&#125;]</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">list</span></span>(n, g, r, b) <span class="keyword">do</span></span><br><span class="line">	<span class="keyword">cond</span> <span class="keyword">do</span></span><br><span class="line">		r == n-g -&gt;</span><br><span class="line">			[&#123;g,r,b&#125;|list(n, g+<span class="number">1</span>, 0, n-g<span class="number">-1</span>)]</span><br><span class="line">		<span class="keyword">true</span> -&gt;</span><br><span class="line">			[&#123;g,r,b&#125;|list(n, g, r+<span class="number">1</span>, b<span class="number">-1</span>)]</span><br><span class="line">	<span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Erlang</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">-module</span><span class="params">(become_the_ultimate_phychic)</span>.</span><br><span class="line"><span class="keyword">-export</span><span class="params">([guess/<span class="number">2</span>])</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">guess</span><span class="params">(N, M)</span> -&gt;</span></span><br><span class="line">	List = list(N),</span><br><span class="line">	Res = lists:filter(<span class="keyword">fun</span> (&#123;G, R, B&#125;) -&gt; G*<span class="number">5</span>+R*<span class="number">4</span>+B*<span class="number">3</span> == M <span class="keyword">end</span>, List),</span><br><span class="line">	Res.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">list</span><span class="params">(N)</span> -&gt;</span></span><br><span class="line">	list(N, <span class="number">0</span>, <span class="number">0</span>, N).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">list</span><span class="params">(N, N, _, _)</span> -&gt;</span> [];</span><br><span class="line"><span class="function"><span class="title">list</span><span class="params">(N, G, R, B)</span> -&gt;</span></span><br><span class="line">	<span class="keyword">if</span></span><br><span class="line">		R == N-G -&gt;</span><br><span class="line">			[&#123;G, R, B&#125;|list(N, G+<span class="number">1</span>, <span class="number">0</span>, N-G-<span class="number">1</span>)];</span><br><span class="line">		<span class="literal">true</span> -&gt;</span><br><span class="line">			[&#123;G, R, B&#125;|list(N, G, R+<span class="number">1</span>, B-<span class="number">1</span>)]</span><br><span class="line">	<span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>codewars</tag>
        <tag>elixir</tag>
        <tag>erlang</tag>
      </tags>
  </entry>
  <entry>
    <title>Twice linear</title>
    <url>/2020/10/20/Twice-linear/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Consider a sequence u where u is defined as follows:</p>
<p>1.The number u(0) = 1 is the first one in u.<br>2.For each x in u, then y = 2 * x + 1 and z = 3 * x + 1 must be in u too.<br>3.There are no other numbers in u.<br>Ex: u = [1, 3, 4, 7, 9, 10, 13, 15, 19, 21, 22, 27, …]</p>
<p>1 gives 3 and 4, then 3 gives 7 and 10, 4 gives 9 and 13, then 7 gives 15 and 22 and so on…</p>
<p>Task:<br>Given parameter n the function dbl_linear (or dblLinear…) returns the element u(n) of the ordered (with &lt;) sequence u (so, there are no duplicates).</p>
<p>Example:<br>dbl_linear(10) should return 22</p>
<p>Elixir</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">Twice</span></span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">defp</span> <span class="title">dbl_linear1</span></span>(n, cnt, h, _, _) <span class="keyword">when</span> cnt &gt;= n, <span class="symbol">do:</span> h</span><br><span class="line">    <span class="function"><span class="keyword">defp</span> <span class="title">dbl_linear1</span></span>(n, cnt, h, q2, q3) <span class="keyword">do</span></span><br><span class="line">        q2 = <span class="symbol">:queue</span>.<span class="keyword">in</span>(<span class="number">2</span> * h + <span class="number">1</span>, q2)</span><br><span class="line">        q3 = <span class="symbol">:queue</span>.<span class="keyword">in</span>(<span class="number">3</span> * h + <span class="number">1</span>, q3)</span><br><span class="line">        a = <span class="symbol">:queue</span>.get(q2)</span><br><span class="line">        b = <span class="symbol">:queue</span>.get(q3)</span><br><span class="line">        h = min(a, b)</span><br><span class="line">        &#123;_, q2&#125; = if (h == a), <span class="symbol">do:</span> <span class="symbol">:queue</span>.out(q2), <span class="symbol">else:</span> &#123;a, q2&#125;</span><br><span class="line">        &#123;_, q3&#125; = if (h == b), <span class="symbol">do:</span> <span class="symbol">:queue</span>.out(q3), <span class="symbol">else:</span> &#123;b, q3&#125;</span><br><span class="line">        dbl_linear1(n, cnt + <span class="number">1</span>, h, q2, q3)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">dbl_linear</span></span>(n), <span class="symbol">do:</span> dbl_linear1(n, 0, <span class="number">1</span>, <span class="symbol">:queue</span>.new, <span class="symbol">:queue</span>.new)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Erlang</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">-module</span><span class="params">(twice_linear)</span>.</span><br><span class="line"><span class="keyword">-export</span><span class="params">([dbl_linear/<span class="number">1</span>])</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">dbl_linear</span><span class="params">(N)</span> -&gt;</span></span><br><span class="line">    dbl_linear(N, <span class="number">0</span>, <span class="number">1</span>, queue:new(), queue:new()).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">dbl_linear</span><span class="params">(N, C, H, _, _)</span> <span class="title">when</span> C &gt;= N -&gt;</span> H;</span><br><span class="line"><span class="function"><span class="title">dbl_linear</span><span class="params">(N, C, H, J, K)</span> -&gt;</span></span><br><span class="line">    J_ = queue:in(<span class="number">2</span> * H + <span class="number">1</span>, J),</span><br><span class="line">    K_ = queue:in(<span class="number">3</span> * H + <span class="number">1</span>, K),</span><br><span class="line">    A = queue:get(J_),</span><br><span class="line">    B = queue:get(K_),</span><br><span class="line">    H_ = min(A, B),</span><br><span class="line">    <span class="keyword">if</span></span><br><span class="line">        H_ == A -&gt;</span><br><span class="line">            &#123;_, R_j&#125; = queue:out(J_),</span><br><span class="line">            dbl_linear(N, C+<span class="number">1</span>, H_, R_j, K_);</span><br><span class="line">        H_ == B -&gt;</span><br><span class="line">            &#123;_, R_k&#125; = queue:out(K_),</span><br><span class="line">            dbl_linear(N, C+<span class="number">1</span>, H_, J_, R_k)</span><br><span class="line">    <span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>codewars</tag>
        <tag>elixir</tag>
        <tag>erlang</tag>
      </tags>
  </entry>
  <entry>
    <title>Primes in numbers</title>
    <url>/2020/10/17/Primes-in-numbers/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Description:<br>Given a positive number n &gt; 1 find the prime factor decomposition of n. The result will be a string with the following form :</p>
<p> “(p1<strong>n1)(p2</strong>n2)…(pk**nk)”<br>where a ** b means a to the power of b</p>
<p>with the p(i) in increasing order and n(i) empty if n(i) is 1.</p>
<p>Example: n = 86240 should return “(2**5)(5)(7**2)(11)”</p>
<p>Elixir</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">defmodule</span> <span class="title">PrimesInNumbers</span></span> <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">defp</span> <span class="title">factors</span></span>(n, k, acc) <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">cond</span> <span class="keyword">do</span></span><br><span class="line">      n &lt; k*k        -&gt; [n|acc]</span><br><span class="line">      rem(n, k) == 0 -&gt; factors(div(n, k), k, [k|acc])</span><br><span class="line">      <span class="symbol">:otherwise</span>     -&gt; factors(n, k+<span class="number">1</span>, acc)</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">prime_factors</span></span>(n), <span class="symbol">do:</span> </span><br><span class="line">    factors(abs(n), <span class="number">2</span>, []) </span><br><span class="line">      |&gt; Enum.reduce(Map.new, <span class="keyword">fn</span> c,acc -&gt; Map.update(acc, c, <span class="number">1</span>, &amp;(&amp;<span class="number">1+1</span>)) <span class="keyword">end</span>)</span><br><span class="line">      |&gt; Map.to_list</span><br><span class="line">      |&gt; Enum.map(<span class="keyword">fn</span> &#123;k, v&#125; -&gt; if v === <span class="number">1</span> <span class="keyword">do</span> <span class="string">&quot;(<span class="subst">#&#123;k&#125;</span>)&quot;</span> else <span class="string">&quot;(<span class="subst">#&#123;k&#125;</span>**<span class="subst">#&#123;v&#125;</span>)&quot;</span> <span class="keyword">end</span> <span class="keyword">end</span>)</span><br><span class="line">      |&gt; Enum.join(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure>

<p>Erlang</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="keyword">-module</span><span class="params">(primes_in_numbers)</span>.</span><br><span class="line"><span class="keyword">-export</span><span class="params">([prime_factors/<span class="number">1</span>, factors/<span class="number">3</span>, count/<span class="number">3</span>, filter/<span class="number">1</span>])</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">prime_factors</span><span class="params">(N)</span> -&gt;</span></span><br><span class="line">	List = factors(N, <span class="number">2</span>, []),</span><br><span class="line">	R = count(List, <span class="number">1</span>, []),</span><br><span class="line">	Res = lists:map(fun filter/1, R),</span><br><span class="line">	binary_to_list(list_to_binary(Res)).</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">filter</span><span class="params">(&#123;K,V&#125;)</span> -&gt;</span></span><br><span class="line">	<span class="keyword">if</span></span><br><span class="line">		V == <span class="number">1</span> -&gt;</span><br><span class="line">			<span class="string">&quot;(&quot;</span> ++ (erlang:integer_to_list(K)) ++ <span class="string">&quot;)&quot;</span>;</span><br><span class="line">		<span class="literal">true</span> -&gt;</span><br><span class="line">			<span class="string">&quot;(&quot;</span> ++ (erlang:integer_to_list(K)) ++ <span class="string">&quot;**&quot;</span> ++ (erlang:integer_to_list(V)) ++ <span class="string">&quot;)&quot;</span></span><br><span class="line">	<span class="keyword">end</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">factors</span><span class="params">(N, K, List)</span> -&gt;</span></span><br><span class="line">	<span class="keyword">if</span></span><br><span class="line">		N &lt; K*K -&gt; </span><br><span class="line">			[N|List];</span><br><span class="line">		N <span class="keyword">rem</span> K == <span class="number">0</span> -&gt; </span><br><span class="line">			factors(N div K, K, [K|List]);</span><br><span class="line">		<span class="literal">true</span> -&gt;</span><br><span class="line">			factors(N, K+<span class="number">1</span>, List)</span><br><span class="line">	<span class="keyword">end</span>.</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">count</span><span class="params">([H1,H2|Tail], N, Rlist)</span> -&gt;</span></span><br><span class="line">	<span class="keyword">if</span></span><br><span class="line">		Tail == [] -&gt;</span><br><span class="line">			<span class="keyword">if</span></span><br><span class="line">				H1 == H2 -&gt;</span><br><span class="line">					[&#123;H1,N+<span class="number">1</span>&#125;|Rlist];</span><br><span class="line">				H1 /= H2 -&gt;</span><br><span class="line">					[&#123;H1,N&#125;,&#123;H2,<span class="number">1</span>&#125;|Rlist]</span><br><span class="line">			<span class="keyword">end</span>;</span><br><span class="line">		H1 == H2 -&gt;</span><br><span class="line">			count([H2|Tail], N+<span class="number">1</span>, Rlist);</span><br><span class="line">		H1 /= H2 -&gt;</span><br><span class="line">			count([H2|Tail], <span class="number">1</span>, [&#123;H1,N&#125;|Rlist])</span><br><span class="line">	<span class="keyword">end</span>.</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>code</category>
      </categories>
      <tags>
        <tag>codewars</tag>
        <tag>elixir</tag>
        <tag>erlang</tag>
      </tags>
  </entry>
  <entry>
    <title>dwm</title>
    <url>/2020/10/14/dwm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://dwm.suckless.org/">dwm</a>是一个简洁的平铺式窗口管理器<br>配置简单，使用便捷，没有多少依赖，占用内存非常小</p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://git.suckless.org/dwm</span><br><span class="line"><span class="built_in">cd</span> dwm</span><br><span class="line">sudo make clean install</span><br></pre></td></tr></table></figure>
<h4 id="搭配软件"><a href="#搭配软件" class="headerlink" title="搭配软件"></a>搭配软件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S rofi           <span class="comment">#弹出式窗口切换器</span></span><br><span class="line">sudo pacman -S picom          <span class="comment">#X的合成器,可以帮你设置透明度,阴影效果,窗口切换效果等</span></span><br><span class="line">sudo pacman -S alsa-utils     <span class="comment">#是Linux中提供声音设备驱动的内核组件</span></span><br><span class="line">sudo pacman -S feh            <span class="comment">#快速,轻量级的图像查看器</span></span><br><span class="line">sudo pacman -S ranger         <span class="comment">#具有VI键绑定的控制台文件管理器</span></span><br></pre></td></tr></table></figure>
<h4 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h4><p>patch &lt; xxx.diff #打补丁</p>
<p><a href="https://dwm.suckless.org/patches/alpha/">alpha</a>使dwm的菜单栏变透明<br><a href="https://dwm.suckless.org/patches/autostart/">autostart</a>在dwm启动时自动运行指定的脚本<br><a href="https://dwm.suckless.org/patches/pertag/">pertag</a>保持每个标签的布局<br><a href="https://dwm.suckless.org/patches/scratchpad/">scratchpad</a>生成一个可隐藏的所有标签共用的窗口可以当做便签</p>
<h4 id="fcitx5"><a href="#fcitx5" class="headerlink" title="fcitx5"></a>fcitx5</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx5-im fcitx5-chinese-addons</span><br></pre></td></tr></table></figure>

<h4 id="xinitrc的配置"><a href="#xinitrc的配置" class="headerlink" title=".xinitrc的配置"></a>.xinitrc的配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#fcitx5</span></span><br><span class="line">INPUT_METHOD  DEFAULT=fcitx5</span><br><span class="line">GTK_IM_MODULE DEFAULT=fcitx5</span><br><span class="line">QT_IM_MODULE  DEFAULT=fcitx5</span><br><span class="line">XMODIFIERS    DEFAULT=\@im=fcitx5</span><br><span class="line">fcitx5 &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#picom</span></span><br><span class="line">picom &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment">#dwm</span></span><br><span class="line"><span class="built_in">exec</span> dwm</span><br></pre></td></tr></table></figure>

<h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><h5 id="emacs-daemon-sh"><a href="#emacs-daemon-sh" class="headerlink" title="emacs-daemon.sh"></a>emacs-daemon.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">cd</span> ~/ &amp;&amp; emacs --daemon</span><br></pre></td></tr></table></figure>

<h5 id="touchpad-sh"><a href="#touchpad-sh" class="headerlink" title="touchpad.sh"></a>touchpad.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">id=`xinput list | grep <span class="string">&quot;Touchpad&quot;</span> | cut -d<span class="string">&#x27;=&#x27;</span> -f2 | cut -d<span class="string">&#x27;[&#x27;</span> -f1`</span><br><span class="line"></span><br><span class="line">flag=`xinput list-props <span class="variable">$id</span> | grep <span class="string">&quot;Device Enabled &quot;</span> | cut -c 24-24`</span><br><span class="line"><span class="keyword">if</span></span><br><span class="line">  [ <span class="string">&quot;<span class="variable">$flag</span>&quot;</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">  n=1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  n=0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">xinput set-prop <span class="variable">$id</span> <span class="string">&quot;Device Enabled&quot;</span> <span class="variable">$n</span></span><br></pre></td></tr></table></figure>

<h5 id="volup-sh"><a href="#volup-sh" class="headerlink" title="volup.sh"></a>volup.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">amixer -qM <span class="built_in">set</span> Master 10%+ umute</span><br></pre></td></tr></table></figure>

<h5 id="voldown-sh"><a href="#voldown-sh" class="headerlink" title="voldown.sh"></a>voldown.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">amixer -qM <span class="built_in">set</span> Master 10%- umute</span><br></pre></td></tr></table></figure>

<h5 id="wallpapers-sh"><a href="#wallpapers-sh" class="headerlink" title="wallpapers.sh"></a>wallpapers.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">let</span> n=0</span><br><span class="line">files=(<span class="variable">$HOME</span>/wallpapers/*.jpg)</span><br><span class="line">count=<span class="variable">$&#123;#files[@]&#125;</span></span><br><span class="line"><span class="keyword">while</span> [ 1 ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  <span class="built_in">let</span> <span class="string">&quot;n=<span class="subst">$((RANDOM %count)</span>)&quot;</span></span><br><span class="line">  file=<span class="string">&quot;<span class="variable">$&#123;files[$n]&#125;</span>&quot;</span></span><br><span class="line">  feh --bg-fill <span class="string">&quot;<span class="variable">$file</span>&quot;</span> &amp;</span><br><span class="line">  sleep 1m</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h5 id="autostart-sh"><a href="#autostart-sh" class="headerlink" title="autostart.sh"></a>autostart.sh</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash </span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="function"><span class="title">print_date</span></span>()&#123;</span><br><span class="line">date <span class="string">&#x27;+%Y年%m月%d日 %H:%M&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">clock=$(date <span class="string">&#x27;+%I&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$clock</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">	<span class="string">&quot;00&quot;</span>) clock_icon=<span class="string">&quot;🕛&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;01&quot;</span>) clock_icon=<span class="string">&quot;🕐&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;02&quot;</span>) clock_icon=<span class="string">&quot;🕑&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;03&quot;</span>) clock_icon=<span class="string">&quot;🕒&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;04&quot;</span>) clock_icon=<span class="string">&quot;🕓&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;05&quot;</span>) clock_icon=<span class="string">&quot;🕔&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;06&quot;</span>) clock_icon=<span class="string">&quot;🕕&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;07&quot;</span>) clock_icon=<span class="string">&quot;🕖&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;08&quot;</span>) clock_icon=<span class="string">&quot;🕗&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;09&quot;</span>) clock_icon=<span class="string">&quot;🕘&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;10&quot;</span>) clock_icon=<span class="string">&quot;🕙&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;11&quot;</span>) clock_icon=<span class="string">&quot;🕚&quot;</span> ;;</span><br><span class="line">	<span class="string">&quot;12&quot;</span>) clock_icon=<span class="string">&quot;🕛&quot;</span> ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"></span><br><span class="line">LOCALTIME=$(date +<span class="string">&quot;🗓:%Y-%m-%d %u,<span class="variable">$&#123;clock_icon&#125;</span>:%H:%M&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">status_icon=<span class="string">&quot;🔋&quot;</span></span><br><span class="line">power=$(cat /sys/class/power_supply/BAT0/capacity)</span><br><span class="line">power_status=<span class="variable">$&#123;status_icon&#125;</span>:<span class="variable">$&#123;power&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vol=$(amixer get Master | tail -n1 | sed -r <span class="string">&#x27;s/.*\[(.*)%\].*/\1/&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$vol</span>&quot;</span> -eq <span class="string">&quot;0&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    icon=<span class="string">&quot;🔇&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$vol</span>&quot;</span> -gt <span class="string">&quot;70&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	icon=<span class="string">&quot;🔊&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$vol</span>&quot;</span> -lt <span class="string">&quot;30&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	icon=<span class="string">&quot;🔈&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	icon=<span class="string">&quot;🔉&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">vol_status=<span class="string">&quot;<span class="variable">$icon</span>:<span class="variable">$vol</span>%&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">update</span></span>() &#123;</span><br><span class="line">    sum=0</span><br><span class="line">    <span class="keyword">for</span> arg; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -r i &lt; <span class="string">&quot;<span class="variable">$arg</span>&quot;</span></span><br><span class="line">        sum=$(( sum + i ))</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">    cache=<span class="variable">$&#123;XDG_CACHE_HOME:-<span class="variable">$HOME</span>/.cache&#125;</span>/<span class="variable">$&#123;1##*/&#125;</span></span><br><span class="line">    [ -f <span class="string">&quot;<span class="variable">$cache</span>&quot;</span> ] &amp;&amp; <span class="built_in">read</span> -r old &lt; <span class="string">&quot;<span class="variable">$cache</span>&quot;</span> || old=0</span><br><span class="line">    <span class="built_in">printf</span> %d\\n <span class="string">&quot;<span class="variable">$sum</span>&quot;</span> &gt; <span class="string">&quot;<span class="variable">$cache</span>&quot;</span></span><br><span class="line">    <span class="built_in">printf</span> %d\\n $(( sum - old ))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RX=$(update /sys/class/net/[ew]*/statistics/rx_bytes)</span><br><span class="line">TX=$(update /sys/class/net/[ew]*/statistics/tx_bytes)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 换算单位</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$RX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果接收速率小于1024,则单位为B/s</span></span><br><span class="line">    RX=<span class="string">&quot;<span class="variable">$&#123;RX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$RX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 否则如果接收速率大于 1048576,则改变单位为MB/s</span></span><br><span class="line">    RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span> | awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line">    RX=$(<span class="built_in">printf</span> <span class="string">&quot;%.2fMB/s&quot;</span> <span class="variable">$RX</span>) </span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># 否则如果接收速率大于1024但小于1048576,则单位为KB/s</span></span><br><span class="line">    RX=$(<span class="built_in">echo</span> <span class="variable">$RX</span> | awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line">    RX=$(<span class="built_in">printf</span> <span class="string">&quot;%.2fKB/s&quot;</span> <span class="variable">$RX</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 换算单位</span></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$TX</span> -lt 1024 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 如果发送速率小于1024,则单位为B/s</span></span><br><span class="line">    TX=<span class="string">&quot;<span class="variable">$&#123;TX&#125;</span>B/s&quot;</span></span><br><span class="line"><span class="keyword">elif</span> [[ <span class="variable">$TX</span> -gt 1048576 ]];<span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 否则如果发送速率大于 1048576,则改变单位为MB/s</span></span><br><span class="line">    TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span> | awk <span class="string">&#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;</span>)</span><br><span class="line">    TX=$(<span class="built_in">printf</span> <span class="string">&quot;%.2fMB/s&quot;</span> <span class="variable">$TX</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># 否则如果发送速率大于1024但小于1048576,则单位为KB/s</span></span><br><span class="line">    TX=$(<span class="built_in">echo</span> <span class="variable">$TX</span> | awk <span class="string">&#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;</span>)</span><br><span class="line">    TX=$(<span class="built_in">printf</span> <span class="string">&quot;%.2fKB/s&quot;</span> <span class="variable">$TX</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#TX_f=$(printf &quot;%.2&quot; $TX)</span></span><br><span class="line"><span class="comment">#RX_f=$(printf &quot;%.2&quot; $RX)</span></span><br><span class="line"></span><br><span class="line">NetRraf=<span class="string">&quot;⏫:<span class="variable">$TX</span> ⏬:<span class="variable">$RX</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CHARGE=$(cat /sys/class/power_supply/BAT0/capacity)</span><br><span class="line">STATUS=$(cat /sys/class/power_supply/BAT0/status)</span><br><span class="line"></span><br><span class="line">total=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">used=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $3&#125;&#x27;</span>)</span><br><span class="line">free=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>)</span><br><span class="line">shared=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $5&#125;&#x27;</span>)</span><br><span class="line">buff=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $6&#125;&#x27;</span>)</span><br><span class="line">available=$(free -m | sed -n <span class="string">&#x27;2p&#x27;</span> | awk <span class="string">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">max_light=$(cat /sys/class/backlight/amdgpu_bl0/max_brightness)</span><br><span class="line">light=$(cat /sys/class/backlight/amdgpu_bl0/brightness)</span><br><span class="line">light_status=☀:$(<span class="built_in">echo</span> <span class="variable">$light</span> <span class="variable">$max_light</span> | awk <span class="string">&#x27;&#123;printf &quot;%d\n&quot;,$1/$2*100&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到ip</span></span><br><span class="line">ip=`ip addr show eth0 | awk <span class="string">&#x27; !/127.0.0.1/ &amp;&amp; /inet/ &#123; gsub(/\/.*/, &quot;&quot;, $2); print &quot;&quot;$2 &#125;&#x27;</span>`</span><br><span class="line"><span class="comment">#echo $ip</span></span><br><span class="line">ip_index=`<span class="built_in">echo</span> <span class="variable">$ip</span> | awk -F <span class="string">&#x27;.&#x27;</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算cpu使用率</span></span><br><span class="line">cpu=`top -b -n1 | fgrep <span class="string">&quot;Cpu(s)&quot;</span> | tail -1 | awk -F<span class="string">&#x27;id,&#x27;</span> <span class="string">&#x27;&#123;split($1, vs, &quot;,&quot;); v=vs[length(vs)]; sub(/\s+/, &quot;&quot;, v);sub(/\s+/, &quot;&quot;, v); printf &quot;%d&quot;, 100-v;&#125;&#x27;</span>`</span><br><span class="line"><span class="comment">#echo $cpu</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#统计内存使用率</span></span><br><span class="line">mem_used_persent=`free -m | awk -F <span class="string">&#x27;[ :]+&#x27;</span> <span class="string">&#x27;NR==2&#123;printf &quot;%d&quot;, ($2-$7)/$2*100&#125;&#x27;</span>`</span><br><span class="line"><span class="comment">#echo $mem_used_persent</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">xsetroot -name <span class="string">&quot;<span class="variable">$&#123;NetRraf&#125;</span>,<span class="variable">$&#123;available&#125;</span>M,<span class="variable">$&#123;cpu&#125;</span>%,<span class="variable">$&#123;LOCALTIME&#125;</span>,<span class="variable">$&#123;light_status&#125;</span>%,<span class="variable">$&#123;vol_status&#125;</span>,<span class="variable">$&#123;power_status&#125;</span>%&quot;</span> </span><br><span class="line">sleep 1</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>aria2</title>
    <url>/2020/10/14/aria2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/aria2/aria2">aria2</a>是一个轻量级的多协议和多源命令行下载工具，它支持HTTP/HTTPS，FTP，SFTP，BitTorrent和Metalink协议</p>
<p><a href="http://aria2.github.io/manual/en/html/index.html">在线手册</a></p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S aria2</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>feh</title>
    <url>/2020/10/14/feh/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://wiki.archlinux.org/index.php/Feh">feh</a>是一款轻巧而功能强大的图像查看器，也可用于管理缺少此类功能的独立窗口管理器的桌面壁纸</p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S feh</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">feh *                          <span class="comment">#可查看当前目录和当前子目录的所有图片</span></span><br><span class="line">feh -D 2 *.jpg                 <span class="comment">#2秒一张幻灯片播放</span></span><br><span class="line">feh -F                         <span class="comment">#全屏</span></span><br><span class="line">feh -g 1920x1080               <span class="comment">#按规定尺寸播放</span></span><br><span class="line">feh --list                     <span class="comment">#查看图片信息</span></span><br><span class="line">fen --bg-fill                  <span class="comment">#全屏图片作为背景</span></span><br><span class="line">feh -S                         <span class="comment">#排序,可按照 name, filename, width, height, pixels,size, format 七种方式排序</span></span><br><span class="line">feh --cycle-once -FD 1 *.jpg   <span class="comment">#循环一次后即结束播放</span></span><br><span class="line">feh -t -E 128 -y 128 -W 1024 -H 1024 wallpaper</span><br><span class="line"><span class="comment">#-t 是生成缩略图 -E 是缩略图的高度 -y是缩略图宽度 -W 是拼接后的照片的宽度 -H是拼接后的照片的高度 指定wallpaper文件夹</span></span><br><span class="line">feh -irF  -O index.jpg wallpaper</span><br><span class="line"><span class="comment">#-r 递归所指定目录下所有子目录，-i 是生成索引，-F全屏</span></span><br><span class="line">feh -m -X -E 108 -y 192 -H 1080 -W 1920 -o montage.jpg wallpaper</span><br><span class="line"><span class="comment">#把wallpaper目录下的图片按192的宽度,108的高度,生成一张宽度为1920,高度为1080的拼贴画</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>ffmpeg</title>
    <url>/2020/10/14/ffmpeg/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ffmpeg</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/FFmpeg/FFmpeg">ffmpeg</a>FFmpeg是用于处理多媒体内容（例如音频，视频，字幕和相关元数据）的库和工具的集合</p>
<h4 id="通用选项"><a href="#通用选项" class="headerlink" title="通用选项"></a>通用选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-L license</span><br><span class="line">-h                     <span class="comment">#帮助</span></span><br><span class="line">-fromats               <span class="comment">#显示可用的格式，编解码的，协议的...</span></span><br><span class="line">-f fmt                 <span class="comment">#强迫采用格式fmt</span></span><br><span class="line">-I filename            <span class="comment">#输入文件</span></span><br><span class="line">-y                     <span class="comment">#覆盖输出文件</span></span><br><span class="line">-t duration            <span class="comment">#设置纪录时间 hh:mm:ss[.xxx]格式的记录时间也支持</span></span><br><span class="line">-ss position           <span class="comment">#搜索到指定的时间 [-]hh:mm:ss[.xxx]的格式也支持</span></span><br><span class="line">-title string          <span class="comment">#设置标题</span></span><br><span class="line">-author string         <span class="comment">#设置作者</span></span><br><span class="line">-copyright string      <span class="comment">#设置版权</span></span><br><span class="line">-comment string        <span class="comment">#设置评论</span></span><br><span class="line">-target <span class="built_in">type</span>           <span class="comment">#设置目标文件类型(vcd,svcd,dvd) 所有的格式选项（比特率，编解码以及缓冲区大小）自动设置，只需要输入如下的就可以了：ffmpeg -i myfile.avi -target vcd /tmp/vcd.mpg</span></span><br><span class="line">-hq                    <span class="comment">#激活高质量设置</span></span><br><span class="line">-itsoffset offset      <span class="comment">#设置以秒为基准的时间偏移，该选项影响所有后面的输入文件。该偏移被加到输入文件的时戳，定义一个正偏移意味着相应的流被延迟了 offset秒。 [-]hh:mm:ss[.xxx]的格式也支持</span></span><br></pre></td></tr></table></figure>
<h4 id="视频选项"><a href="#视频选项" class="headerlink" title="视频选项"></a>视频选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-b bitrate            <span class="comment">#设置比特率，缺省200kb/s</span></span><br><span class="line">-r fps                <span class="comment">#设置帧频 缺省25</span></span><br><span class="line">-s size               <span class="comment">#设置帧大小 格式为WXH 缺省160X128.下面的简写也可以直接使用：Sqcif 128X96 qcif 176X144 cif 252X288 4cif 704X576</span></span><br><span class="line">-aspect aspect        <span class="comment">#设置横纵比 4:3 16:9 或 1.3333 1.7777</span></span><br><span class="line">-croptop size         <span class="comment">#设置顶部切除带大小 像素单位</span></span><br><span class="line">-cropbottom size –cropleft size –cropright size</span><br><span class="line">-padtop size          <span class="comment">#设置顶部补齐的大小 像素单位</span></span><br><span class="line">-padbottom size –padleft size –padright size –padcolor color </span><br><span class="line"><span class="comment">#设置补齐条颜色(hex,6个16进制的数，红:绿:蓝排列，比如 000000代表黑色)</span></span><br><span class="line">-vn                   <span class="comment">#不做视频记录</span></span><br><span class="line">-bt tolerance         <span class="comment">#设置视频码率容忍度kbit/s</span></span><br><span class="line">-maxrate bitrate      <span class="comment">#设置最大视频码率容忍度</span></span><br><span class="line">-minrate bitreate     <span class="comment">#设置最小视频码率容忍度</span></span><br><span class="line">-bufsize size         <span class="comment">#设置码率控制缓冲区大小</span></span><br><span class="line">-vcodec codec         <span class="comment">#强制使用codec编解码方式。如果用copy表示原始编解码数据必须被拷贝。</span></span><br><span class="line">-sameq                <span class="comment">#使用同样视频质量作为源（VBR）</span></span><br><span class="line">-pass n               <span class="comment">#选择处理遍数（1或者2）。两遍编码非常有用。第一遍生成统计信息，第二遍生成精确的请求的码率</span></span><br><span class="line">-passlogfile file     <span class="comment">#选择两遍的纪录文件名为file</span></span><br></pre></td></tr></table></figure>
<h4 id="高级视频选项"><a href="#高级视频选项" class="headerlink" title="高级视频选项"></a>高级视频选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-g gop_size           <span class="comment">#设置图像组大小</span></span><br><span class="line">-intra                <span class="comment">#仅适用帧内编码</span></span><br><span class="line">-qscale q             <span class="comment">#使用固定的视频量化标度(VBR)</span></span><br><span class="line">-qmin q               <span class="comment">#最小视频量化标度(VBR)</span></span><br><span class="line">-qmax q               <span class="comment">#最大视频量化标度(VBR)</span></span><br><span class="line">-qdiff q              <span class="comment">#量化标度间最大偏差 (VBR)</span></span><br><span class="line">-qblur blur           <span class="comment">#视频量化标度柔化(VBR)</span></span><br><span class="line">-qcomp compression    <span class="comment">#视频量化标度压缩(VBR)</span></span><br><span class="line">-rc_init_cplx complexity </span><br><span class="line"><span class="comment">#一遍编码的初始复杂度</span></span><br><span class="line">-b_qfactor factor     <span class="comment">#在p和b帧间的qp因子</span></span><br><span class="line">-i_qfactor factor     <span class="comment">#在p和i帧间的qp因子</span></span><br><span class="line">-b_qoffset offset     <span class="comment">#在p和b帧间的qp偏差</span></span><br><span class="line">-i_qoffset offset     <span class="comment">#在p和i帧间的qp偏差</span></span><br><span class="line">-rc_eq equation       <span class="comment">#设置码率控制方程 默认tex^qComp</span></span><br><span class="line">-rc_override override <span class="comment">#特定间隔下的速率控制重载</span></span><br><span class="line">-me method            <span class="comment">#设置运动估计的方法 可用方法有 zero phods log x1 epzs(缺省) full</span></span><br><span class="line">-dct_algo algo        <span class="comment">#设置dct的算法 可用的有 0 FF_DCT_AUTO 缺省的DCT 1 FF_DCT_FASTINT 2 FF_DCT_INT 3 FF_DCT_MMX 4 FF_DCT_MLIB 5 FF_DCT_ALTIVEC</span></span><br><span class="line">-idct_algo algo       <span class="comment">#设置idct算法。可用的有 0 FF_IDCT_AUTO 缺省的IDCT 1 FF_IDCT_INT 2 FF_IDCT_SIMPLE 3 FF_IDCT_SIMPLEMMX 4 FF_IDCT_LIBMPEG2MMX 5 FF_IDCT_PS2 6 FF_IDCT_MLIB 7 FF_IDCT_ARM 8 FF_IDCT_ALTIVEC 9 FF_IDCT_SH4 10 FF_IDCT_SIMPLEARM</span></span><br><span class="line">-er n                 <span class="comment">#设置错误残留为n 1 FF_ER_CAREFULL 缺省 2 FF_ER_COMPLIANT 3 FF_ER_AGGRESSIVE 4 FF_ER_VERY_AGGRESSIVE</span></span><br><span class="line">-ec bit_mask          <span class="comment">#设置错误掩蔽为bit_mask,该值为如下值的位掩码 1 FF_EC_GUESS_MVS (default=enabled) 2 FF_EC_DEBLOCK (default=enabled)</span></span><br><span class="line">-bf frames            <span class="comment">#使用frames B 帧，支持mpeg1,mpeg2,mpeg4</span></span><br><span class="line">-mbd mode             <span class="comment">#宏块决策 0 FF_MB_DECISION_SIMPLE 使用mb_cmp 1 FF_MB_DECISION_BITS 2 FF_MB_DECISION_RD</span></span><br><span class="line">-4mv                  <span class="comment">#使用4个运动矢量 仅用于mpeg4</span></span><br><span class="line">-part                 <span class="comment">#使用数据划分 仅用于mpeg4</span></span><br><span class="line">-bug param            <span class="comment">#绕过没有被自动监测到编码器的问题</span></span><br><span class="line">-strict strictness    <span class="comment">#更标准的严格性</span></span><br><span class="line">-aic                  <span class="comment">#使能高级帧内编码 h263+</span></span><br><span class="line">-umv                  <span class="comment">#使能无限运动矢量 h263+</span></span><br><span class="line">-deinterlace          <span class="comment">#不采用交织方法</span></span><br><span class="line">-interlace            <span class="comment">#强迫交织法编码仅对mpeg2和mpeg4有效。当你的输入是交织的并且你想要保持交织以最小图像损失的时候采用该选项。可选的方法是不交织，但是损失更大</span></span><br><span class="line">-psnr                 <span class="comment">#计算压缩帧的psnr</span></span><br><span class="line">-vstats               <span class="comment">#输出视频编码统计到vstats_hhmmss.log</span></span><br><span class="line">-vhook module         <span class="comment">#插入视频处理模块 module 包括了模块名和参数，用空格分开</span></span><br></pre></td></tr></table></figure>

<h4 id="音频选项"><a href="#音频选项" class="headerlink" title="音频选项"></a>音频选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-ab bitrate           <span class="comment">#设置音频码率</span></span><br><span class="line">-ar freq              <span class="comment">#设置音频采样率</span></span><br><span class="line">-ac channels          <span class="comment">#设置通道 缺省为1</span></span><br><span class="line">-an                   <span class="comment">#不使能音频纪录</span></span><br><span class="line">-acodec codec         <span class="comment">#使用codec编解码</span></span><br></pre></td></tr></table></figure>

<h4 id="音频-视频捕获选项"><a href="#音频-视频捕获选项" class="headerlink" title="音频/视频捕获选项"></a>音频/视频捕获选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-vd device            <span class="comment">#设置视频捕获设备。比如/dev/video0</span></span><br><span class="line">-vc channel           <span class="comment">#设置视频捕获通道 DV1394专用</span></span><br><span class="line">-tvstd standard       <span class="comment">#设置电视标准 NTSC PAL(SECAM)</span></span><br><span class="line">-dv1394               <span class="comment">#设置DV1394捕获</span></span><br><span class="line">-av device            <span class="comment">#设置音频设备 比如/dev/dsp</span></span><br></pre></td></tr></table></figure>

<h4 id="高级选项"><a href="#高级选项" class="headerlink" title="高级选项"></a>高级选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-map file:stream      <span class="comment">#设置输入流映射</span></span><br><span class="line">-debug                <span class="comment">#打印特定调试信息</span></span><br><span class="line">-benchmark            <span class="comment">#为基准测试加入时间</span></span><br><span class="line">-hex                  <span class="comment">#倾倒每一个输入包</span></span><br><span class="line">-bitexact             <span class="comment">#仅使用位精确算法 用于编解码测试</span></span><br><span class="line">-ps size              <span class="comment">#设置包大小，以bits为单位</span></span><br><span class="line">-re                   <span class="comment">#以本地帧频读数据，主要用于模拟捕获设备</span></span><br><span class="line">-loop                 <span class="comment">#循环输入流（只工作于图像流，用于ffserver测试）</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/14/hello-world/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>jepgoptim</title>
    <url>/2020/10/14/jepgoptim/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/tjko/jpegoptim">jepgoptim</a>图片优化的开源小工具，有较好的图片压缩效果</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S jpegoptim</span><br></pre></td></tr></table></figure>

<h4 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-d &lt;path&gt;, --dest=&lt;path&gt;             <span class="comment">#保存优化后的文件到指定目录(默认为覆盖源文件)</span></span><br><span class="line">-f, --force                          <span class="comment">#强制优化</span></span><br><span class="line">-m&lt;quality&gt;, --max=&lt;quality&gt;         <span class="comment">#设置压缩质量(1~100)</span></span><br><span class="line">-n, --noaction                       <span class="comment">#只打印优化结果</span></span><br><span class="line">-S&lt;size&gt;, --size=&lt;size&gt;              <span class="comment">#尝试压缩到指定大小</span></span><br><span class="line">-T&lt;treshold&gt;, --threshold=&lt;treshold&gt; <span class="comment">#阀值(%),到达后不再优化</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>mplayer</title>
    <url>/2020/10/16/mplayer/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S mplayer</span><br></pre></td></tr></table></figure>

<p><a href="https://github.com/sherpya/MPlayer/">mplayer</a>命令行播放器</p>
<p><a href="http://www.mplayerhq.hu/DOCS/HTML/en/MPlayer.html">在线手册</a></p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>powerpill</title>
    <url>/2020/10/14/powerpill/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://wiki.archlinux.org/index.php/powerpill">powerpill</a>Powerpill是一个pacman包装器，使用并行和分段下载来尝试加快Pacman的下载速度</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S powerpill</span><br></pre></td></tr></table></figure>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><font color=#9c9>/etc/powerpill/powerpill.json</font> #配置文件,您可以根据自己的喜好进行编辑</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#操作同pacman相同</span></span><br><span class="line">sudo powerpill -S      <span class="comment">#下载</span></span><br><span class="line">sudo powerpill -Syu    <span class="comment">#更新系统</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>qbittorrent</title>
    <url>/2020/10/14/qbittorrent/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/qbittorrent/qBittorrent">qbittorrent</a>是由Arvid Norberg使用C++/Qt编程的bittorrent客户端</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S qbittorrent</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>ranger</title>
    <url>/2020/10/14/ranger/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/ranger/ranger/">ranger</a>是一个基于ncurses库的命令行文件管理器，有一个简单而简约的用户界面。它使用基本的vi式的导航键，能够预览文件和用默认程序打开它们。</p>
<h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S ranger</span><br></pre></td></tr></table></figure>

<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ranger --copy-config=all       <span class="comment">#生成配置文件</span></span><br><span class="line">./config/ranger</span><br><span class="line">commandr.py                    <span class="comment">#脚本文件可以自行添加修改</span></span><br><span class="line">commandr_full.py</span><br><span class="line">rc.conf                        <span class="comment">#快捷键，功能设置文件</span></span><br><span class="line">rifle.conf                     <span class="comment">#默认执行程序设置文件</span></span><br><span class="line">scope.sh                       <span class="comment">#预览脚本</span></span><br></pre></td></tr></table></figure>

<h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p><font color=#9c9>将插件添加到目录~/.config/ranger/plugins/</font><br>MP3转换插件<a href="https://github.com/madskjeldgaard/ranger-lame">https://github.com/madskjeldgaard/ranger-lame</a><br>SoX集成插件，用于管理，处理和转换音频文件<a href="https://github.com/madskjeldgaard/ranger-sox">https://github.com/madskjeldgaard/ranger-sox</a><br>git附件插件<a href="https://github.com/matze/ranger-annex">https://github.com/matze/ranger-annex</a><br>Ranger Devicons插件<a href="https://github.com/alexanderjeurissen/ranger_devicons">https://github.com/alexanderjeurissen/ranger_devicons</a><br>ranger自动跳转插件<a href="https://github.com/fdw/ranger-autojump">https://github.com/fdw/ranger-autojump</a><br>feedranger<a href="https://github.com/stefandtw/feedranger">https://github.com/stefandtw/feedranger</a><br>fzf-marks(带有fzf的模糊书签)<a href="https://github.com/laggardkernel/ranger-fzf-marks">https://github.com/laggardkernel/ranger-fzf-marks</a><br>ranger-cmus(与cmus音频播放器集成)<a href="https://github.com/maximtrp/ranger-cmus">https://github.com/maximtrp/ranger-cmus</a></p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>rofi</title>
    <url>/2020/10/14/rofi/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/davatorium/rofi">rofi</a>窗口切换器,应用程序启动器和dmenu替换</p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S rofi</span><br></pre></td></tr></table></figure>

<h4 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/.config/rofi</span><br><span class="line">rofi -dump-config &gt; ~/.config/rofi/config.rasi</span><br></pre></td></tr></table></figure>

<p>主题编写规则<a href="https://github.com/davatorium/rofi/blob/next/doc/rofi-theme.5.markdown">https://github.com/davatorium/rofi/blob/next/doc/rofi-theme.5.markdown</a></p>
<h4 id="使用配置"><a href="#使用配置" class="headerlink" title="使用配置"></a>使用配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rofi -show run  -theme one-theme.rasi</span><br><span class="line">rofi -show drun -theme one-theme.rasi</span><br></pre></td></tr></table></figure>

<p>主题资料库<a href="https://github.com/davatorium/rofi-themes">https://github.com/davatorium/rofi-themes</a></p>
<h4 id="官方主题"><a href="#官方主题" class="headerlink" title="官方主题"></a>官方主题</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rofi-theme-selector       <span class="comment">#Alt+A确认</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>scrot</title>
    <url>/2020/10/14/scrot/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p>scrot是一个命名行截图软件支持延时截屏,调整品质/大小,命令行传递等功能</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scrot                         <span class="comment">#截下整个桌面</span></span><br><span class="line">scrot /home/code/1.jpg        <span class="comment">#命名并保存到指定文件夹</span></span><br><span class="line">scrot -s                      <span class="comment">#手动框选截图</span></span><br><span class="line">scrot -d NUM                  <span class="comment">#延迟NUM秒后截屏</span></span><br><span class="line">scrot -d NUM -c               <span class="comment">#显示延时的倒计时</span></span><br><span class="line">scrot -q NUM                  <span class="comment">#调整截屏质量(1~100,默认75)</span></span><br><span class="line">scrot -t NUM                  <span class="comment">#调整截屏尺寸(1~100)</span></span><br><span class="line">scrot -e <span class="string">&#x27;mv $f ~/wallpaper&#x27;</span>  <span class="comment">#将截取的截屏传递给其它命令($f)</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>st</title>
    <url>/2020/10/14/st/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://st.suckless.org/">st</a>是一个极轻量的虚拟终端</p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://git.suckless.org/st</span><br><span class="line"><span class="built_in">cd</span> st</span><br><span class="line">sudo make clean install</span><br></pre></td></tr></table></figure>

<h4 id="补丁"><a href="#补丁" class="headerlink" title="补丁"></a>补丁</h4><p>pacth &lt; xxx.diff</p>
<p><a href="https://st.suckless.org/patches/alpha/">alpha</a>实现透明效果<br><a href="https://st.suckless.org/patches/vim_browse/">vimBrowse</a>vim浏览补丁提供了在终端历史记录缓冲区中移动，使用类似于VIM的动作<br><a href="https://st.suckless.org/patches/anysize/">anysize</a>可以使用任意大小字体<br><a href="https://st.suckless.org/patches/hidecursor/">hidecursor</a>当有键盘操作时隐藏鼠标<br><a href="https://st.suckless.org/patches/scrollback/">scrollback</a>可以用键盘回滚终端<br><a href="https://st.suckless.org/patches/scrollback/">scrollback-mouse</a>可以用鼠标回滚终端<br><a href="https://st.suckless.org/patches/dracula/">dracula</a>配色方案,应用后仅更改终端颜色</p>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>youtube-dl</title>
    <url>/2020/10/14/youtube-dl/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><a href="https://github.com/ytdl-org/youtube-dl">youtube-dl</a>命令行视频下载软件，不止于youtube</p>
<h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo pacman -S youtube-dl</span><br></pre></td></tr></table></figure>

<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">youtube-dl [url]                           <span class="comment">#自动选择一个最清晰的格式下载</span></span><br><span class="line">youtube-dl -F [url]                        <span class="comment">#查看视频格式选项</span></span><br><span class="line">youtube-dl -f [number] [url]               <span class="comment">#选择指定格式下载</span></span><br><span class="line">youtube-dl -f [number]+[number] [url]      <span class="comment">#组合下载</span></span><br><span class="line">youtube [palylist_url]                     <span class="comment">#下载视频列表所有视频</span></span><br></pre></td></tr></table></figure>

<h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-U, --update            <span class="comment">#更新</span></span><br><span class="line">--proxy URL             <span class="comment">#例如socks5://127.0.0.1:1080/</span></span><br><span class="line">-r, --limit-rate RATE   <span class="comment">#设置最大下载速度(e.g. 50K or 4.2M)</span></span><br><span class="line">-f, --format FORMAT     <span class="comment">#下载指定序号的文件</span></span><br><span class="line">-F, --list-formats      <span class="comment">#列出所有视频格式</span></span><br><span class="line">--list-subs             <span class="comment">#列出所有可用字幕</span></span><br><span class="line">-u, --username USERNAME <span class="comment">#ID</span></span><br><span class="line">-p, --password PASSWORD <span class="comment">#密码</span></span><br><span class="line">--skip-download         <span class="comment">#跳过下载</span></span><br><span class="line">—-write-sub             <span class="comment">#写入字幕,即把字幕下载(默认为.vvt)</span></span><br><span class="line">--sub-format            <span class="comment">#指定字幕格式,按顺序选,不存在则选下一个</span></span><br><span class="line">--convert-subs          <span class="comment">#转换字幕,通用为.srt或.ass</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>记录</category>
      </categories>
      <tags>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>网页收藏</title>
    <url>/2020/10/14/%E7%BD%91%E9%A1%B5%E6%94%B6%E8%97%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h3 id="Makedown语法说明"><a href="#Makedown语法说明" class="headerlink" title="Makedown语法说明"></a>Makedown语法说明</h3><p><a href="http://www.wowubuntu.com/markdown/index/">http://www.wowubuntu.com/markdown/index/</a></p>
]]></content>
      <categories>
        <category>收藏</category>
      </categories>
      <tags>
        <tag>网页</tag>
      </tags>
  </entry>
</search>
